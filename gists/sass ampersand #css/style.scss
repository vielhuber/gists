.class1 { & .class2 { } }                                                                =>     .class1 .class2 { }
.class1 { &.class2 { } }                                                                 =>     .class1.class2 { }
.class1 { &:hover { } }                                                                  =>     .class1:hover { }
.class1 { &-left { } }                                                                   =>     .class1-left { }
.class1 { $parent: &; .class2 { #{$parent}-left & } }                                    =>     .class2-left { }
.class1 { .class2 & { } }                                                                =>     .class2 .class1 { }
.class1 { .class2 { .class3 & { } } }                                                    =>     .class3 .class1 .class2 { }
.class1 { body.foo & { }                                                                 =>     body.foo .class1 { }
.class1 { .class2 { @at-root .modifier#{&} { } } }                                       =>     .modifier.class1 .class2 { }
.class1 { .class2 { @at-root #{selector-replace(&, '.class1', '.class1:hover')} { } } }  =>     .class1:hover .class2 { }

.class1 { .class2 {
  $parent: nth(nth(&, 1), 1);
  $rest: (); @for $i from 2 through length(nth(&, 1)) { $rest: append($rest, nth(nth(&, 1), $i)); }
  @at-root #{$parent}:nth-child(odd) #{$rest}:hover { }
} }
=>
.class1:nth-child(odd) .class2:hover { }